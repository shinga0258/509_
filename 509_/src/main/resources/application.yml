spring: # 주의할 점은 내용작성시 들여쓰기 내어쓰기시 공백개수를 반드시 꼭 지켜야 한다. 
  profiles: #실행환경(dev(개발),test(테스트),local(로컬),prod(운영))
    active: local 

# datasource: #DB 접속이 1개만 있을 경우
#   driver-class-name: oracle.jdbc.OracleDriver
#  #url: jdbc:oracle:thin:@127.0.0.1:1521:xe
#   url: jdbc:oracle:thin:@//127.0.0.1:1521/xe  # oracle 12c 이후부터는 이렇게 하라고 함.
#   username: mymvc_user
#   password: gclass
#   type: com.zaxxer.hikari.HikariDataSource
#   hikari: #커넥션풀 
#    #driver-class-name: oracle.jdbc.OracleDriver
#    #jdbc-url: jdbc:oracle:thin:@127.0.0.1:1521:xe
#    #username: mymvc_user
#    #password: gclass
#     connection-timeout : 30000 #클라이언트가 pool에 connection을 요청하는데 기다리는 최대시간을 설정 30초
#     maximum-pool-size : 10 #최대 커넥션 개수 설정
#     max-lifetime: 1800000  #커넥션 풀에서 살아있을 수 있는 커넥션의 최대 수명시간 1,800초(30분)    

  datasource-finalorauser4: #첫번째 DB 접속. 2개의 datasource 를 설정할때 이름을 다르게 해서 쓰되 _ 가 들어가면 작동안됨.
    driver-class-name: oracle.jdbc.OracleDriver
   #url: jdbc:oracle:thin:@127.0.0.1:1521:xe
   #url: jdbc:oracle:thin:@//127.0.0.1:1521/xe  # oracle 12c 이후부터는 이렇게 하라고 함.
    jdbcUrl: jdbc:oracle:thin:@127.0.0.1:1521:xe # 2개의 datasource 를 설정하려면 기본 스프링 부트 datasource 설정과는 다르게 url 로 되어있던 부분을 jdbcUrl 로 변경해야 한다. JavaConfig 를 통해 사용자가 직접 지정하여 데이터 소스를 구성할 경우 url 이 아닌 jdbcUrl 을 사용하기 때문이다.    
    username: final_orauser4
    password: gclass
    type: com.zaxxer.hikari.HikariDataSource
    hikari: #커넥션풀 
      #driver-class-name: oracle.jdbc.OracleDriver
      #jdbc-url: jdbc:oracle:thin:@127.0.0.1:1521:xe
      #username: mymvc_user
      #password: cclass
      connection-timeout : 30000 #클라이언트가 pool에 connection을 요청하는데 기다리는 최대시간을 설정 30초
      maximum-pool-size : 10 #최대 커넥션 개수 설정
      max-lifetime: 1800000  #커넥션 풀에서 살아있을 수 있는 커넥션의 최대 수명시간 1,800초(30분)

  data:
    mongodb:
      uri: mongodb://devuser:qwer1234$@localhost:27017/chatdb

  messages: #메시지(파일이 여러개일 경우 ,로 구분)
    basename: messages.validation
    encoding: UTF-8

  devtools: #View reload
    livereload:
      enabled: true

    restart: #컨트롤러, 모델단이 바뀌었을 때 프로젝트 재시작(reload) 설정 (정확히는 classpath에 있는 모든 파일)
      enabled: true #재시작(reload) 함

  servlet:
    multipart:
      max-file-size: 10MB     # 파일 업로드 용량제한 설정하기. 파일 업로드 용량을 설정하지 않으면 기본값은 1048576 bytes (1MB)으로 된다.
      max-request-size: 12MB  # 파일 및 파일을 제외한 input 태그값 업로드 용량제한 설정하기. 파일 업로드 용량을 설정하지 않으면 기본값은 1048576 bytes (1MB)으로 된다.


mybatis: #mybatis 설정
 #type-aliases-package: com.spring.med.**.domain 
 #mapper-locations: com/spring/med/**/mapper/*.xml   #src/main/java 아래 패키지속에 매퍼파일을 만드는 경우 
  mapper-locations: mybatis/mapper/**/*.xml          #src/main/resources 아래 폴더속에 매퍼파일을 만드는 경우
logging: #로그 지정
  level:
    #root: error
    '[com.spring.board]': debug 
    #com.zaxxer.hikari.HikariConfig: DEBUG
    #com.zaxxer.hikari: TRACE 

server:
  port: 9090
  servlet:
    context-path: /med-groupware  # Spring Framework 에서는 WAS 톰캣서버를 더블클릭하여 context Path 를 수정하였으나 Spring Boot 에서는 여기에서 한다. context-path: 를 주석처리하면 context Path 가 없는 것이다.
                                  # (필수)context-path 를 /med-groupware 으로 주었으므로 Boot Dashboard 에 가서 med-groupware 에 마우스 우측클릭 Show Properties 에 클릭하여 General 에서 Path: 란에 med-groupware 을 입력해준다.  
    encoding:
      charset: UTF-8
      enabled: true #http 인코딩 지원을 활성화할지 여부
      force: true #post 방식으로 전송했을때 한글데이터가 안깨지도록 함. # Spring Framework 에서는 web.xml 파일에서 filter 태그를 등록시켜 주었음.
